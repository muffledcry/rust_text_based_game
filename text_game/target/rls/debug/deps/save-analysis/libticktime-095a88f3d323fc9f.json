{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1","program":"/home/gitpod/.rustup/toolchains/1.49.0-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","ticktime","--edition=2018","/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=095a88f3d323fc9f","-C","extra-filename=-095a88f3d323fc9f","--out-dir","/workspace/rust_text_based_game/text_game/target/rls/debug/deps","-L","dependency=/workspace/rust_text_based_game/text_game/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/gitpod/.rustup/toolchains/1.49.0-x86_64-unknown-linux-gnu"],"output":"/workspace/rust_text_based_game/text_game/target/rls/debug/deps/libticktime-095a88f3d323fc9f.rmeta"},"prelude":{"crate_id":{"name":"ticktime","disambiguator":[300566189051960353,9786595423085195183]},"crate_root":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src","external_crates":[{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3329901521826220148,8779651902869174066]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11533795067257537051,6600409280955634707]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12614123221401343543,9564301585503608515]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1785005413158388284,2453622026203223019]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12957079427417428001,17718260667887668647]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10214993728156300765,14618204673916620187]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12453517098623888364,4709794086161820998]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12634510118091288440,7983944581587655387]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14017342134866723280,9256858969587329629]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[7061025862014072460,14171357653989770935]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2285728033677722481,16182084057206383065]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[7305883247437987566,266452839079745451]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[13956229687295891598,15294992126055156716]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[931598532372339641,10024719927090962737]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[11150552510595322945,15608256962932530162]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[4217706585212656622,592289864015908737]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[2229008352226773351,3496425060661471051]}}],"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","byte_start":0,"byte_end":9683,"line_start":1,"line_end":290,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","byte_start":0,"byte_end":9683,"line_start":1,"line_end":290,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":27},{"krate":0,"index":38},{"krate":0,"index":36},{"krate":0,"index":40},{"krate":0,"index":47},{"krate":0,"index":45},{"krate":0,"index":49},{"krate":0,"index":61},{"krate":0,"index":59},{"krate":0,"index":6},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":28},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","byte_start":343,"byte_end":352,"line_start":10,"line_end":10,"column_start":5,"column_end":14},"name":"EarthLike","qualname":"::TickTimeType::EarthLike","value":"TickTimeType::EarthLike { seconds_per_tick, month_type }","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":" The date and time is like on the planet earth (12 months, 24 hours a day, 60 minutes an hour, 60 seconds a minute)\n","sig":null,"attributes":[{"value":"/ The date and time is like on the planet earth (12 months, 24 hours a day, 60 minutes an hour, 60 seconds a minute)","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","byte_start":220,"byte_end":338,"line_start":9,"line_end":9,"column_start":5,"column_end":123}}]},{"kind":"StructVariant","id":{"krate":0,"index":31},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","byte_start":756,"byte_end":762,"line_start":18,"line_end":18,"column_start":5,"column_end":11},"name":"Custom","qualname":"::TickTimeType::Custom","value":"TickTimeType::Custom { seconds_per_tick, hours_in_a_day, months_durations, season_duration }","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":" A configurable date and time type. An hour will still be 60 minutes and a minute 60 seconds.\n Note that sum of `season_duration` and `months_durations` must match to be consistent.\n","sig":null,"attributes":[{"value":"/ A configurable date and time type. An hour will still be 60 minutes and a minute 60 seconds.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","byte_start":560,"byte_end":656,"line_start":16,"line_end":16,"column_start":5,"column_end":101}},{"value":"/ Note that sum of `season_duration` and `months_durations` must match to be consistent.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","byte_start":661,"byte_end":751,"line_start":17,"line_end":17,"column_start":5,"column_end":95}}]},{"kind":"Enum","id":{"krate":0,"index":27},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","byte_start":201,"byte_end":213,"line_start":8,"line_end":8,"column_start":10,"column_end":22},"name":"TickTimeType","qualname":"::TickTimeType","value":"pub enum TickTimeType {\n\n    /// The date and time is like on the planet earth (12 months, 24 hours a day, 60 minutes an hour, 60 seconds a minute)\n    EarthLike {\n        /// How much seconds represent a tick. Should be minimum 1.\n        seconds_per_tick: usize,\n        /// Which kind of calendar to compute values\n        month_type: EarthLikeMonthType,\n    },\n\n    /// A configurable date and time type. An hour will still be 60 minutes and a minute 60 seconds.\n    /// Note that sum of `season_duration` and `months_durations` must match to be consistent.\n    Custom {\n        /// How much seconds represent a tick. Should be minimum 1.\n        seconds_per_tick: usize,\n        /// The duration of a day\n        hours_in_a_day: usize,\n        /// A list of month durations.\n        months_durations: Vec<usize>,\n        /// A list of seasons durations.\n        season_duration: Vec<usize>,\n    },\n}","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":31}],"decl_id":null,"docs":" The way the in game datetime will be handled\n","sig":null,"attributes":[{"value":"/ The way the in game datetime will be handled","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","byte_start":119,"byte_end":167,"line_start":6,"line_end":6,"column_start":1,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":41},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","byte_start":1209,"byte_end":1214,"line_start":33,"line_end":33,"column_start":5,"column_end":10},"name":"Lunar","qualname":"::EarthLikeMonthType::Lunar","value":"EarthLikeMonthType::Lunar","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" A simple mode where each month is 30 days long\n","sig":null,"attributes":[{"value":"/ A simple mode where each month is 30 days long","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","byte_start":1154,"byte_end":1204,"line_start":32,"line_end":32,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":43},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","byte_start":1300,"byte_end":1304,"line_start":35,"line_end":35,"column_start":5,"column_end":9},"name":"Real","qualname":"::EarthLikeMonthType::Real","value":"EarthLikeMonthType::Real","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" A mode where real month duration will be computed as long as leap years\n","sig":null,"attributes":[{"value":"/ A mode where real month duration will be computed as long as leap years","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","byte_start":1220,"byte_end":1295,"line_start":34,"line_end":34,"column_start":5,"column_end":80}}]},{"kind":"Enum","id":{"krate":0,"index":40},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","byte_start":1129,"byte_end":1147,"line_start":31,"line_end":31,"column_start":10,"column_end":28},"name":"EarthLikeMonthType","qualname":"::EarthLikeMonthType","value":"pub enum EarthLikeMonthType {\n\n    /// A simple mode where each month is 30 days long\n    Lunar,\n\n    /// A mode where real month duration will be computed as long as leap years\n    Real,\n}","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":43}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":49},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","byte_start":1551,"byte_end":1559,"line_start":42,"line_end":42,"column_start":12,"column_end":20},"name":"TickTime","qualname":"::TickTime","value":"TickTime {  }","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58}],"decl_id":null,"docs":" A `TickTime` helps to keep track of the current tick in the game.\n Following a `TickTimeType`, it will translate the current tick to\n a list of computed values, representing year, season, month...\n","sig":null,"attributes":[{"value":"/ A `TickTime` helps to keep track of the current tick in the game.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","byte_start":1309,"byte_end":1378,"line_start":38,"line_end":38,"column_start":1,"column_end":70}},{"value":"/ Following a `TickTimeType`, it will translate the current tick to","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","byte_start":1379,"byte_end":1448,"line_start":39,"line_end":39,"column_start":1,"column_end":70}},{"value":"/ a list of computed values, representing year, season, month...","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","byte_start":1449,"byte_end":1515,"line_start":40,"line_end":40,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":7},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","byte_start":2402,"byte_end":2406,"line_start":66,"line_end":66,"column_start":12,"column_end":16},"name":"init","qualname":"<TickTime>::init","value":"pub fn init(usize, TickTimeType) -> Result<Self, &'static str>","parent":null,"children":[],"decl_id":null,"docs":" Initialise a TickTime with a given tick (usefull to reload the state of a save) and\n a `TickTimeType`.\n","sig":null,"attributes":[{"value":"/ Initialise a TickTime with a given tick (usefull to reload the state of a save) and","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","byte_start":2277,"byte_end":2364,"line_start":64,"line_end":64,"column_start":5,"column_end":92}},{"value":"/ a `TickTimeType`.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","byte_start":2369,"byte_end":2390,"line_start":65,"line_end":65,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":8},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","byte_start":3001,"byte_end":3005,"line_start":86,"line_end":86,"column_start":12,"column_end":16},"name":"tick","qualname":"<TickTime>::tick","value":"pub fn tick(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Add a tick to the current_tick. Will also compute values\n","sig":null,"attributes":[{"value":"/ Add a tick to the current_tick. Will also compute values","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","byte_start":2929,"byte_end":2989,"line_start":85,"line_end":85,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":9},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","byte_start":3199,"byte_end":3205,"line_start":92,"line_end":92,"column_start":12,"column_end":18},"name":"values","qualname":"<TickTime>::values","value":"pub fn values(&Self) -> (usize, usize, usize, usize, usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Return a tuple of computed usizes for (year, season, month, day, hour, minute, second)\n","sig":null,"attributes":[{"value":"/ Return a tuple of computed usizes for (year, season, month, day, hour, minute, second)","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","byte_start":3097,"byte_end":3187,"line_start":91,"line_end":91,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":10},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","byte_start":3498,"byte_end":3510,"line_start":105,"line_end":105,"column_start":12,"column_end":24},"name":"current_tick","qualname":"<TickTime>::current_tick","value":"pub fn current_tick(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Total tick count\n","sig":null,"attributes":[{"value":"/ Total tick count","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","byte_start":3466,"byte_end":3486,"line_start":104,"line_end":104,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":11},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","byte_start":3616,"byte_end":3620,"line_start":110,"line_end":110,"column_start":12,"column_end":16},"name":"year","qualname":"<TickTime>::year","value":"pub fn year(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the read only computed year\n","sig":null,"attributes":[{"value":"/ Return the read only computed year","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","byte_start":3566,"byte_end":3604,"line_start":109,"line_end":109,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","byte_start":3719,"byte_end":3724,"line_start":115,"line_end":115,"column_start":12,"column_end":17},"name":"month","qualname":"<TickTime>::month","value":"pub fn month(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the read only computed month\n","sig":null,"attributes":[{"value":"/ Return the read only computed month","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","byte_start":3668,"byte_end":3707,"line_start":114,"line_end":114,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":13},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","byte_start":3822,"byte_end":3825,"line_start":120,"line_end":120,"column_start":12,"column_end":15},"name":"day","qualname":"<TickTime>::day","value":"pub fn day(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the read only computed day\n","sig":null,"attributes":[{"value":"/ Return the read only computed day","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","byte_start":3773,"byte_end":3810,"line_start":119,"line_end":119,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":14},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","byte_start":3922,"byte_end":3926,"line_start":125,"line_end":125,"column_start":12,"column_end":16},"name":"hour","qualname":"<TickTime>::hour","value":"pub fn hour(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the read only computed hour\n","sig":null,"attributes":[{"value":"/ Return the read only computed hour","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","byte_start":3872,"byte_end":3910,"line_start":124,"line_end":124,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":15},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","byte_start":4026,"byte_end":4032,"line_start":130,"line_end":130,"column_start":12,"column_end":18},"name":"minute","qualname":"<TickTime>::minute","value":"pub fn minute(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the read only computed minute\n","sig":null,"attributes":[{"value":"/ Return the read only computed minute","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","byte_start":3974,"byte_end":4014,"line_start":129,"line_end":129,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","byte_start":4134,"byte_end":4140,"line_start":135,"line_end":135,"column_start":12,"column_end":18},"name":"second","qualname":"<TickTime>::second","value":"pub fn second(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the read only computed second\n","sig":null,"attributes":[{"value":"/ Return the read only computed second","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","byte_start":4082,"byte_end":4122,"line_start":134,"line_end":134,"column_start":5,"column_end":45}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","byte_start":2262,"byte_end":2270,"line_start":63,"line_end":63,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/ticktime-0.0.1/src/lib.rs","byte_start":2262,"byte_end":2270,"line_start":63,"line_end":63,"column_start":6,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":49},"to":{"krate":4294967295,"index":4294967295}}]}